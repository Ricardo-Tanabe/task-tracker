:root {
    --gray-element-color: rgb(190, 190, 190);
    --gray-placeholder-color: rgb(200, 200, 200);
}

body {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.main-conteiner {
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: white;
    border: 2px solid black;
    font-family: 'Courier New', Courier, monospace;
    border-radius: 10px;
    width: 600px;
    padding: 10px;
}

.elementWidth {
    width: 400px;
}

.main-conteiner > h3 {
    font-weight: normal;
}

.input-conteiner {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    border: 1px solid black;
    border-radius: 5px;
    padding: 2px;
}

.input-conteiner > input {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    border: none;
    width: 100%;
    height: 100%;
}

.input-conteiner > input::placeholder {
    color: var(--gray-placeholder-color);
}

.input-conteiner > img {
    width: 35px;
    height: 30px;
    min-width: 35px;
    min-height: 30px;
}

.task-container {
    list-style: none;
    padding: 0;
}

.task-container > li {
    position: relative;
    display: flex;
    flex-direction: row;
    align-items: center;
    border-bottom: 1px solid var(--gray-element-color);
    /* overflow: hidden; */
}

.checked {
    appearance: none;
    width: 13px;
    height: 13px;
    border: 1px solid black;
    border-radius: 3px;
    background-color: white;
    cursor: pointer;
    margin-right: 8px;
    min-width: 13px;
    min-height: 13px;
    overflow: hidden;
    z-index: 1;
}

.checked:checked {
    background-color: var(--gray-element-color);
}

.task {
    display: inline-block;
    white-space: nowrap;
    overflow: hidden;
    /* text-overflow: ellipsis; */
    z-index: 0;
    /* animation: slideIn 5s linear infinite; */
}

.delete {
    margin-left: auto;
    width: 13px;
    height: 13px;
    min-width: 13px;
    min-height: 13px;
    z-index: 1;
}

@keyframes slideIn {
    from {
        transform: translateX(0);
        clip-path: inset(0 0 0 0);
    }
    to {
        transform: translateX(-50%);
        clip-path: inset(0 0 0 50%);
    }
}